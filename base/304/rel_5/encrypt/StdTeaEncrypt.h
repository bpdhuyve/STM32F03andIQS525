//================================================================================================//
// M O D U L E   H E A D E R
//------------------------------------------------------------------------------------------------//
// This is the header file of the TEA (Tiny Encryption Algorithm) encryption module.
// This Encryption entity is designed to be used for encrypt the data bytes that should be programmed in the DSP.\n
// So it's unpossible to copy the code by others.
//
// Copyright (c), PsiControl Mechatronics NV, All rights reserved.
//================================================================================================//
#ifndef ENCRYPT__STDTEAENCRYPT_H
#define ENCRYPT__STDTEAENCRYPT_H
//================================================================================================//



//================================================================================================//
// I N C L U D E S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



//================================================================================================//
// E X P O R T E D   S Y M B O L   D E F I N I T I O N S   A N D   M A C R O S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



//================================================================================================//
// E X P O R T E D   T Y P E D E F S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



//================================================================================================//
// E X P O R T E D   V A R I A B L E S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



//================================================================================================//
// E X P O R T E D   F U N C T I O N   P R O T O T Y P E S
//------------------------------------------------------------------------------------------------//
// @brief   Function to encode/decode the data in a byte buffer
// @param   key     : pointer to the 16 byte key (128 bit) key to encode/decode the data
// @param   buffer  : pointer to the data which must be encoded/decoded
// @param   buffer_byte_length : length in bytes of the data buffer
// @param   encode  : indicates if encoding (TRUE) or decoding (FALSE) must be done on the data
// @return  TRUE if encoding/decoding has succeeded, else FALSE
BOOL StdTeaEncryptByteBuffer(U8* key,
                             U8* buffer,
                             U16 buffer_byte_length,
                             BOOL encode);
//================================================================================================//



//================================================================================================//
// E X P O R T E D   S T A T I C   I N L I N E   F U N C T I O N S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



#endif /* ENCRYPT__STDTEAENCRYPT_H */
