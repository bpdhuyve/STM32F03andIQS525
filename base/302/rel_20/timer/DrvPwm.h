//================================================================================================//
// M O D U L E   H E A D E R
//------------------------------------------------------------------------------------------------//
// Processor and implementation independent prototypes and definitions for PWM driver interface.
//
// Copyright (c), PsiControl Mechatronics NV, All rights reserved.
//================================================================================================//
#ifndef TIMER__DRVPWM_H
#define TIMER__DRVPWM_H
//================================================================================================//



//================================================================================================//
// I N C L U D E S
//------------------------------------------------------------------------------------------------//
//ISYS include section
#include "timer\ISysPwm.h"
//================================================================================================//



//================================================================================================//
// E X P O R T E D   S Y M B O L   D E F I N I T I O N S   A N D   M A C R O S
//------------------------------------------------------------------------------------------------//
#define DrvPwm_Enable(x)            DrvPwm_SetState(x, TRUE)
#define DrvPwm_Disable(x)           DrvPwm_SetState(x, FALSE)
//================================================================================================//



//================================================================================================//
// E X P O R T E D   T Y P E D E F S
//------------------------------------------------------------------------------------------------//
typedef U8                          PWM_CHANNEL_ID;

typedef BOOL (*PWM_SET_DUTYCYLE)(PWM_CHANNEL_ID channel_id, U16 duty_cycle);

typedef BOOL (*PWM_SET_STATE)(PWM_CHANNEL_ID channel_id, BOOL enable);

typedef struct
{
    PWM_SET_DUTYCYLE                set_dutycycle_hook;
    PWM_SET_STATE                   set_state_hook;
}
PWM_CHANNEL_HOOK_LIST;

typedef struct
{
    PWM_CHANNEL_ID                  channel_id;
    PWM_CHANNEL_HOOK_LIST*	        hook_list_ptr;
}
PWM_CHANNEL_STRUCT;

typedef PWM_CHANNEL_STRUCT*         PWM_CHANNEL_HNDL;
//================================================================================================//



//================================================================================================//
// E X P O R T E D   V A R I A B L E S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



//================================================================================================//
// E X P O R T E D   F U N C T I O N   P R O T O T Y P E S
//------------------------------------------------------------------------------------------------//
void DrvPwm_Init(void);

BOOL DrvPwm_SetDutyCycle(PWM_CHANNEL_HNDL channel_hndl, U16 duty_cycle);

BOOL DrvPwm_SetState(PWM_CHANNEL_HNDL channel_hndl, BOOL enable);
//================================================================================================//



//================================================================================================//
// E X P O R T E D   S T A T I C   I N L I N E   F U N C T I O N S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



#endif /* TIMER__DRVPWM_H */
