//================================================================================================//
// M O D U L E   H E A D E R
//------------------------------------------------------------------------------------------------//
// This file contains the Data Link Layer of the MODBUS protocol implemented as SLAVE
//
//
// <------------------------ MODBUS TCP/IP ADU(1) ------------------------->
//              <----------- MODBUS PDU (1') ---------------->
//  +-----------+---------------+------------------------------------------+
//  | TID | PID | Length | UID  |Code | Data                               |
//  +-----------+---------------+------------------------------------------+
//  |     |     |        |      |                                           
// (2)   (3)   (4)      (5)    (6)                                          
//
// (2)  ... MB_TCP_TID          = 0 (Transaction Identifier - 2 Byte) 
// (3)  ... MB_TCP_PID          = 2 (Protocol Identifier - 2 Byte)
// (4)  ... MB_TCP_LEN          = 4 (Number of bytes - 2 Byte)
// (5)  ... MB_TCP_UID          = 6 (Unit Identifier - 1 Byte)
// (6)  ... MB_TCP_FUNC         = 7 (Modbus Function Code)
//
// (1)  ... Modbus TCP/IP Application Data Unit
// (1') ... Modbus Protocol Data Unit


// Copyright (c), PsiControl Mechatronics NV, All rights reserved.
//================================================================================================//
#ifndef MODBUS__COMMNLTCPIPMODBUSSLAVE_H
#define MODBUS__COMMNLTCPIPMODBUSSLAVE_H
//================================================================================================//



//================================================================================================//
// I N C L U D E S
//------------------------------------------------------------------------------------------------//
//DRIVER lib include section
//================================================================================================//



//================================================================================================//
// E X P O R T E D   S Y M B O L   D E F I N I T I O N S   A N D   M A C R O S
//------------------------------------------------------------------------------------------------//
#define MB_TCP_DEFAULT_PORT     502             /* TCP listening port. */


#define MB_TCP_TID              0
#define MB_TCP_PID              2
#define MB_TCP_LEN              4
#define MB_TCP_UID              6
#define MB_TCP_FUNC             7

#define MB_TCP_HEADER_LENGHT    7
#define MB_TCP_BUF_SIZE         (256 + MB_TCP_HEADER_LENGHT)       /* Must hold a complete Modbus TCP frame. */

#define MB_TCP_PROTOCOL_ID      0               /* 0 = Modbus Protocol */
//================================================================================================//



//================================================================================================//
// E X P O R T E D   T Y P E D E F S
//------------------------------------------------------------------------------------------------//
typedef void (*NLTCPIPMODBUSSLAVE_RECEIVED)(U8* frame_ptr,
                                        U8  length,
                                        U8* reply_ptr,
                                        U8* reply_length_ptr);
//================================================================================================//



//================================================================================================//
// E X P O R T E D   V A R I A B L E S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



//================================================================================================//
// E X P O R T E D   F U N C T I O N   P R O T O T Y P E S
//------------------------------------------------------------------------------------------------//
// @brief   Initialiser for the DataLink Layer entity
void CommNlTcpIpModbusSlave_Init(void);

// @brief  Background handler.
void CommNlTcpIpModbusSlave_Handler(U8* frame_ptr,U16  length, U8** reply_ptr, U16* reply_length_ptr);

// @remark none
void CommNlTcpIpModbusSlave_RegisterRequestHook(NLTCPIPMODBUSSLAVE_RECEIVED frame_request_hook);
//================================================================================================//



//================================================================================================//
// E X P O R T E D   S T A T I C   I N L I N E   F U N C T I O N S
//------------------------------------------------------------------------------------------------//
//================================================================================================//



//================================================================================================//
// C L E A R / U N D E F    C O N F I G U R A T I O N
//------------------------------------------------------------------------------------------------//
//================================================================================================//



#endif /* MODBUS__COMMDLLMODBUSSLAVE_H */
